#!/usr/bin/env bash
set -euo pipefail

# Get the directory where this script is located
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

# Function to update .gitignore file
update_gitignore() {
  local target_dir="$1"
  local gitignore_path="$target_dir/.gitignore"
  
  # Create .gitignore if it doesn't exist
  if [[ ! -f "$gitignore_path" ]]; then
    echo "# Automatically generated by ai-sandbox installer" > "$gitignore_path"
    echo "Creating .gitignore file"
  fi
  
  # Add entries to .gitignore if they don't already exist
  for entry in ".ai/" ".envrc"; do
    if ! grep -q "^$entry$" "$gitignore_path"; then
      echo "$entry" >> "$gitignore_path"
      echo "✔ Added $entry to .gitignore"
    fi
  done
}

# Process command line arguments
USE_DIRENV=1
NON_INTERACTIVE=0
FORCE_DOCKER=0
TARGET=""
AWS_REGION="us-west-2"

for arg in "$@"; do
  case "$arg" in
    --no-direnv)
      USE_DIRENV=0
      ;;
    --non-interactive)
      NON_INTERACTIVE=1
      ;;
    -f|--force)
      FORCE_DOCKER=1
      ;;
    --region=*)
      AWS_REGION="${arg#*=}"
      ;;
    --help)
      echo "Usage: install.sh [OPTIONS] /path/to/repo"
      echo
      echo "Options:"
      echo "  --no-direnv         Don't use direnv for PATH integration"
      echo "  --non-interactive   Run in non-interactive mode (no prompts)"
      echo "  -f, --force         Force overwrite of Dockerfile and docker-compose.yml"
      echo "  --region=REGION     Set AWS region (default: us-west-2)"
      echo "  --help              Show this help message"
      echo
      exit 0
      ;;
    *)
      if [[ -z "$TARGET" ]]; then
        TARGET="$arg"
      fi
      ;;
  esac
done

# Check if target is provided
if [[ -z "$TARGET" ]]; then
  echo "Usage: install.sh [--no-direnv] [--non-interactive] /path/to/repo"
  exit 1
fi

# Validate target is a git repo
[[ ! -d "$TARGET/.git" ]] && { echo "✖ $TARGET is not a Git repo"; exit 1; }

mkdir -p "$TARGET/.ai/scripts"
cp -R "$SCRIPT_DIR/scripts"/* "$TARGET/.ai/scripts/"

# Make sure templates directory exists
mkdir -p "$TARGET/.ai/templates"
cp -R "$SCRIPT_DIR/.ai/templates/"* "$TARGET/.ai/templates/" 2>/dev/null || true
cp "$SCRIPT_DIR/scripts/templates/.aienv.example" "$TARGET/.ai/.aienv.example"

# Set the AWS_REGION configuration value
if [[ -f "$TARGET/.ai/.aienv" ]]; then
  # Update existing file if it exists
  if grep -q "^AWS_REGION=" "$TARGET/.ai/.aienv"; then
    sed -i.bak "s/^AWS_REGION=.*/AWS_REGION=$AWS_REGION/" "$TARGET/.ai/.aienv"
    rm -f "$TARGET/.ai/.aienv.bak"
  else
    echo "AWS_REGION=$AWS_REGION" >> "$TARGET/.ai/.aienv"
  fi
else
  # Create new file if it doesn't exist
  echo "AWS_REGION=$AWS_REGION" >> "$TARGET/.ai/.aienv"
fi

# Copy Docker-related files only if FORCE_DOCKER flag is set or files don't exist
if [[ "$FORCE_DOCKER" -eq 1 ]] || [[ ! -f "$TARGET/.ai/docker-compose.yml" ]]; then
  echo "Copying docker-compose.yml to $TARGET/.ai/"
  cp "$SCRIPT_DIR/docker-compose.yml" "$TARGET/.ai/"
else
  echo "Skipping docker-compose.yml (use -f to override)"
fi

if [[ "$FORCE_DOCKER" -eq 1 ]] || [[ ! -f "$TARGET/.ai/Dockerfile" ]]; then
  echo "Copying Dockerfile to $TARGET/.ai/"
  cp "$SCRIPT_DIR/Dockerfile" "$TARGET/.ai/"
else
  echo "Skipping Dockerfile (use -f to override)"
fi

# Ensure the container scripts are executable
chmod +x "$TARGET/.ai/scripts/container/"*.sh

# Set the USE_DIRENV configuration value
if [[ -f "$TARGET/.ai/.aienv" ]]; then
  # Update existing file if it exists
  if grep -q "^USE_DIRENV=" "$TARGET/.ai/.aienv"; then
    sed -i.bak "s/^USE_DIRENV=.*/USE_DIRENV=$USE_DIRENV/" "$TARGET/.ai/.aienv"
    rm -f "$TARGET/.ai/.aienv.bak"
  else
    echo "USE_DIRENV=$USE_DIRENV" >> "$TARGET/.ai/.aienv"
  fi
else
  # Create new file if it doesn't exist
  echo "USE_DIRENV=$USE_DIRENV" > "$TARGET/.ai/.aienv"
fi

# Handle PATH integration based on direnv preference
if [[ "$USE_DIRENV" -eq 1 ]] && command -v direnv &> /dev/null; then
    # Use direnv if enabled and available
    echo 'export PATH="$PATH:$(git rev-parse --show-toplevel)/.ai/scripts"' >> "$TARGET/.envrc" || true
    echo "✔ Added scripts to PATH via direnv (.envrc)"
else
    # Don't use direnv - provide manual PATH instructions
    SCRIPTS_PATH="$TARGET/.ai/scripts"
    echo "ℹ️ Using non-direnv mode. To use the ai-* commands from anywhere:"
    echo "  Add the scripts to your PATH manually:"
    echo "    export PATH=\"\$PATH:$SCRIPTS_PATH\""
fi

# Update .gitignore to exclude AI sandbox files
update_gitignore "$TARGET"

# Copy README.md
cp "$SCRIPT_DIR/README.md" "$TARGET/" 2>/dev/null || true

echo "✔ AI sandbox scripts installed in $TARGET"
echo "ℹ️ Run the commands from the repository root or add the scripts to your PATH"